- [abs](#liquid_filters-math_filters-abs)
- [ceil](#liquid_filters-math_filters-ceil)
- [floor](#liquid_filters-math_filters-floor)
- [divided_by](#liquid_filters-math_filters-divided_by)
- [minus](#liquid_filters-math_filters-minus)
- [plus](#liquid_filters-math_filters-plus)
- [round](#liquid_filters-math_filters-round)
- [times](#liquid_filters-math_filters-times)
- [modulo](#liquid_filters-math_filters-modulo)

#### abs

Returns the absolute value of a number.

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ -17 | abs }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ -17 | abs }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 4 | abs }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 4 | abs }}
```

`abs` will also work on a string if the string only contains a number.

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ "-19.86" | abs }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ "-19.86" | abs }}
```

#### ceil

Rounds the input up to the nearest whole number. Liquid tries to convert the input to a number before the filter is applied.

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 1.2 | ceil }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 1.2 | ceil }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 2.0 | ceil }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 2.0 | ceil }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 183.357 | ceil }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 183.357 | ceil }}
```

Here the input value is a string:

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ "3.5" | ceil }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ "3.5" | ceil }}
```

#### floor

Rounds a number down to the nearest whole number. Liquid tries to convert the input to a number before the filter is applied.

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 1.2 | floor }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 1.2 | floor }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 2.0 | floor }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 2.0 | floor }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 183.357 | floor }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 183.357 | floor }}
```

Here the input value is a string:

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ "3.5" | floor }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ "3.5" | floor }}
```

#### divided_by

Divides a number by the specified number.

The result is rounded down to the nearest integer (that is, the [floor](#floor) if the divisor is an integer.

<p class="code-label">Input</p>
{% raw %}
``` liquid
{{ 16 | divided_by: 4 }}
```
{% endraw %}

<p class="code-label">Output</p>
``` text
{{ 16 | divided_by: 4 }}
```

<p class="code-label">Input</p>
{% raw %}
``` liquid
{{ 5 | divided_by: 3 }}
```
{% endraw %}

<p class="code-label">Output</p>
``` text
{{ 5 | divided_by: 3 }}
```

##### Controlling rounding

`divided_by` produces a result of the same type as the divisor â€” that is, if you divide by an integer, the result will be an integer. If you divide by a float (a number with a decimal in it), the result will be a float.

For example, here the divisor is an integer:

<p class="code-label">Input</p>
{% raw %}
``` liquid
{{ 20 | divided_by: 7 }}
```
{% endraw %}

<p class="code-label">Output</p>
``` text
{{ 20 | divided_by: 7 }}
```

Here it is a float:

<p class="code-label">Input</p>
{% raw %}
``` liquid
{{ 20 | divided_by: 7.0 }}
```
{% endraw %}

<p class="code-label">Output</p>
``` text
{{ 20 | divided_by: 7.0 }}
```

##### Changing variable types

You might want to use a variable as a divisor, in which case you can't simply add `.0` to convert it to a float. In these cases, you can `assign` a version of your variable converted to a float using the `times` filter.

In this example, we're dividing by a variable that contains an integer, so we get an integer:

<p class="code-label">Input</p>
{% raw %}
``` liquid
{% assign my_integer = 7 %}
{{ 20 | divided_by: my_integer }}
```
{% endraw %}

<p class="code-label">Output</p>
``` text
{% assign my_integer = 7 %}
{{ 20 | divided_by: my_integer }}
```

Here, we [multiply](#times) the variable by `1.0` to get a float, then divide by the float instead:

<p class="code-label">Input</p>
{% raw %}
``` liquid
{% assign my_integer = 7 %}
{% assign my_float = my_integer | times: 1.0 %}
{{ 20 | divided_by: my_float }}
```
{% endraw %}

<p class="code-label">Output</p>
``` text
{% assign my_integer = 7 %}
{% assign my_float = my_integer | times: 1.0 %}
{{ 20 | divided_by: my_float }}
```

#### minus

Subtracts a number from another number.

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 4 | minus: 2 }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 4 | minus: 2 }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 16 | minus: 4 }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 16 | minus: 4 }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 183.357 | minus: 12 }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 183.357 | minus: 12 }}
```

#### plus

Adds a number to another number.

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 4 | plus: 2 }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 4 | plus: 2 }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 16 | plus: 4 }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 16 | plus: 4 }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 183.357 | plus: 12 }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 183.357 | plus: 12 }}
```

#### round


Rounds an input number to the nearest integer or, if a number is specified as an argument, to that number of decimal places.

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 1.2 | round }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 1.2 | round }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 2.7 | round }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 2.7 | round }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 183.357 | round: 2 }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 183.357 | round: 2 }}
```

#### times

Multiplies a number by another number.

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 3 | times: 2 }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 3 | times: 2 }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 24 | times: 7 }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 24 | times: 7 }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 183.357 | times: 12 }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 183.357 | times: 12 }}
```

#### modulo

Returns the remainder of a division operation.

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 3 | modulo: 2 }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 3 | modulo: 2 }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 24 | modulo: 7 }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 24 | modulo: 7 }}
```

<p class="code-label">Input</p>

{% raw %}
```liquid
{{ 183.357 | modulo: 12 }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 183.357 | modulo: 12 }}
```
