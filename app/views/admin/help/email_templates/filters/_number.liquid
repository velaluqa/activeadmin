- [number_to_phone](#liquid_filters-number_filters-number_to_phone)
- [number_to_percentage](#liquid_filters-number_filters-number_to_percentage)
- [number_with_delimiter](#liquid_filters-number_filters-number_with_delimiter)
- [number_with_precision](#liquid_filters-number_filters-number_with_precision)
- [number_to_human_size](#liquid_filters-number_filters-number_to_human_size)
- [number_to_human](#liquid_filters-number_filters-number_to_human)

#### number_to_phone

<p class="code-label">Input</p>
{% raw %}
```liquid
{{ 5551234 | number_to_phone }}
{{ "0305551234" | number_to_phone }}
{{ 1235551234 | number_to_phone }}
{{ 1235551234 | number_to_phone: area_code: true }}
{{ "0305551234" | number_to_phone: delimiter: " " }}
{{ 1235551234 | number_to_phone: area_code: true, extension: 555 }}
{{ 1235551234 | number_to_phone: country_code: 1 }}
{{ "123a456" | number_to_phone }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 5551234 | number_to_phone }}
{{ "0305551234" | number_to_phone }}
{{ 1235551234 | number_to_phone }}
{{ 1235551234 | number_to_phone: area_code: true }}
{{ "0305551234" | number_to_phone: delimiter: " " }}
{{ 1235551234 | number_to_phone: area_code: true, extension: 555 }}
{{ 1235551234 | number_to_phone: country_code: 1 }}
{{ "123a456" | number_to_phone }}
```

#### number_to_currency

Formats a number into a currency string (e.g., $13.65). You can
customize the format in the options hash.

<p class="code-label">Input</p>
{% raw %}
```liquid
{{ 1234567890.50 | number_to_currency }}
{{ 1234567890.506 | number_to_currency }}
{{ 1234567890.506 | number_to_currency: precision: 3 }}
{{ "123a456" | number_to_currency }}
{{ -1234567890.50 | number_to_currency: negative_format: "(%u%n)" }}
{{ 1234567890.50 | number_to_currency: unit: "EUR", separator: ",", delimiter: "." }}
{{ 1234567890.50 | number_to_currency: unit: "EUR", separator: ",", delimiter: ".", format: "%n %u" }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 1234567890.50 | number_to_currency }}
{{ 1234567890.506 | number_to_currency }}
{{ 1234567890.506 | number_to_currency: precision: 3 }}
{{ "123a456" | number_to_currency }}
{{ -1234567890.50 | number_to_currency: negative_format: "(%u%n)" }}
{{ 1234567890.50 | number_to_currency: unit: "EUR", separator: ",", delimiter: "." }}
{{ 1234567890.50 | number_to_currency: unit: "EUR", separator: ",", delimiter: ".", format: "%n %u" }}
```

#### number_to_percentage

Formats a number as a percentage string (e.g., 65%). You can customize
the format in the options (`:precision`, `:significant`, `:separator`,
`:delimiter`, `:format`).

<p class="code-label">Input</p>
{% raw %}
```liquid
{{ 100 | number_to_percentage }}
{{ "98" | number_to_percentage }}
{{ 100 | number_to_percentage: precision: 0 }}
{{ 1000 | number_to_percentage: delimiter: '.', separator: ',' }}
{{ 302.24398923423 | number_to_percentage: precision: 5 }}
{{ "98a" | number_to_percentage }}
{{ 100 | number_to_percentage: format: "%n  %" }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 100 | number_to_percentage }}
{{ "98" | number_to_percentage }}
{{ 100 | number_to_percentage: precision: 0 }}
{{ 1000 | number_to_percentage: delimiter: '.', separator: ',' }}
{{ 302.24398923423 | number_to_percentage: precision: 5 }}
{{ "98a" | number_to_percentage }}
{{ 100 | number_to_percentage: format: "%n  %" }}
```

#### number_with_delimiter

Formats a number with grouped thousands using delimiter (e.g.,
12,324). You can customize the format in the options hash.

<p class="code-label">Input</p>
{% raw %}
```liquid
{{ 12345678 | number_with_delimiter }}
{{ "123456" | number_with_delimiter }}
{{ 12345678.05 | number_with_delimiter }}
{{ 12345678 | number_with_delimiter: delimiter: "." }}
{{ 12345678 | number_with_delimiter: delimiter: "," }}
{{ 12345678.05 | number_with_delimiter: separator: " " }}
{{ "112a" | number_with_delimiter }}
{{ 98765432.98 | number_with_delimiter: delimiter: " ", separator: "," }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 12345678 | number_with_delimiter }}
{{ "123456" | number_with_delimiter }}
{{ 12345678.05 | number_with_delimiter }}
{{ 12345678 | number_with_delimiter: delimiter: "." }}
{{ 12345678 | number_with_delimiter: delimiter: "," }}
{{ 12345678.05 | number_with_delimiter: separator: " " }}
{{ "112a" | number_with_delimiter }}
{{ 98765432.98 | number_with_delimiter: delimiter: " ", separator: "," }}
```

#### number_with_precision

Formats a number with the specified level of :precision (e.g., 112.32
has a precision of 2 if :significant is false, and 5 if :significant
is true). You can customize the format in the options hash.

<p class="code-label">Input</p>
{% raw %}
```liquid
{{ 111.2345 | number_with_precision }}
{{ 111.2345 | number_with_precision: precision: 2 }}
{{ 13 | number_with_precision: precision: 5 }}
{{ 389.32314 | number_with_precision: precision: 0 }}
{{ 111.2345 | number_with_precision: significant: true }}
{{ 111.2345 | number_with_precision: precision: 1, significant: true }}
{{ 13 | number_with_precision: precision: 5, significant: true }}
{{ 13 | number_with_precision: precision: 5, significant: true, strip_insignificant_zeros: true }}
{{ 389.32314 | number_with_precision: precision: 4, significant: true }}
{{ 1111.2345 | number_with_precision: precision: 2, separator: ',', delimiter: '.' }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 111.2345 | number_with_precision }}
{{ 111.2345 | number_with_precision: precision: 2 }}
{{ 13 | number_with_precision: precision: 5 }}
{{ 389.32314 | number_with_precision: precision: 0 }}
{{ 111.2345 | number_with_precision: significant: true }}
{{ 111.2345 | number_with_precision: precision: 1, significant: true }}
{{ 13 | number_with_precision: precision: 5, significant: true }}
{{ 13 | number_with_precision: precision: 5, significant: true, strip_insignificant_zeros: true }}
{{ 389.32314 | number_with_precision: precision: 4, significant: true }}
{{ 1111.2345 | number_with_precision: precision: 2, separator: ',', delimiter: '.' }}
```

#### number_to_human_size

Formats the bytes in number into a more understandable representation
(e.g., giving it 1500 yields 1.5 KB). This method is useful for
reporting file sizes to users. You can customize the format in the
options hash.

<p class="code-label">Input</p>
{% raw %}
```liquid
{{ 123 | number_to_human_size }}
{{ 1234 | number_to_human_size }}
{{ 12345 | number_to_human_size }}
{{ 1234567 | number_to_human_size }}
{{ 1234567890 | number_to_human_size }}
{{ 1234567890123 | number_to_human_size }}
{{ 1234567 | number_to_human_size: precision: 2 }}
{{ 483989 | number_to_human_size: precision: 2 }}
{{ 1234567 | number_to_human_size: precision: 2, separator: ',' }}
{{ 1234567890123 | number_to_human_size: precision: 5 }}
{{ 524288000 | number_to_human_size: precision: 5 }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 123 | number_to_human_size }}
{{ 1234 | number_to_human_size }}
{{ 12345 | number_to_human_size }}
{{ 1234567 | number_to_human_size }}
{{ 1234567890 | number_to_human_size }}
{{ 1234567890123 | number_to_human_size }}
{{ 1234567 | number_to_human_size: precision: 2 }}
{{ 483989 | number_to_human_size: precision: 2 }}
{{ 1234567 | number_to_human_size: precision: 2, separator: ',' }}
{{ 1234567890123 | number_to_human_size: precision: 5 }}
{{ 524288000 | number_to_human_size: precision: 5 }}
```

#### number_to_human

Pretty prints (formats and approximates) a number in a way it is more
readable by humans (eg.: 1200000000 becomes “1.2 Billion”). This is
useful for numbers that can get very large (and too hard to read).

See `number_to_human_size` if you want to print a file size.

You can also define you own unit-quantifier names if you want to use
other decimal units (eg.: 1500 becomes “1.5 kilometers”, 0.150 becomes
“150 milliliters”, etc). You may define a wide range of unit
quantifiers, even fractional ones (centi, deci, mili, etc).

<p class="code-label">Input</p>
{% raw %}
```liquid
{{ 123 | number_to_human }}
{{ 1234 | number_to_human }}
{{ 12345 | number_to_human }}
{{ 1234567 | number_to_human }}
{{ 1234567890 | number_to_human }}
{{ 1234567890123 | number_to_human }}
{{ 1234567890123456 | number_to_human }}
{{ 1234567890123456789 | number_to_human }}
{{ 489939 | number_to_human: precision: 2 }}
{{ 489939 | number_to_human: precision: 4 }}
{{ 1234567 | number_to_human: precision: 4, significant: false }}
{{ 1234567 | number_to_human: precision: 1, separator: ',', significant: false }}
{{ 500000000 | number_to_human: precision: 5 }}
{{ 12345012345 | number_to_human: significant: false }}
```
{% endraw %}

<p class="code-label">Output</p>
```text
{{ 123 | number_to_human }}
{{ 1234 | number_to_human }}
{{ 12345 | number_to_human }}
{{ 1234567 | number_to_human }}
{{ 1234567890 | number_to_human }}
{{ 1234567890123 | number_to_human }}
{{ 1234567890123456 | number_to_human }}
{{ 1234567890123456789 | number_to_human }}
{{ 489939 | number_to_human: precision: 2 }}
{{ 489939 | number_to_human: precision: 4 }}
{{ 1234567 | number_to_human: precision: 4, significant: false }}
{{ 1234567 | number_to_human: precision: 1, separator: ',', significant: false }}
{{ 500000000 | number_to_human: precision: 5 }}
{{ 12345012345 | number_to_human: significant: false }}
```
