- repeatable = nil unless (defined? repeatable)

%tr
  - unless (repeatable.nil?)
    - if(repeatable[:first_row])
      %th.form-group-index-cell= (repeatable[:index]+1).to_s
    - else
      %td
    %td= row_spec['row']
  - else
    %td{:colspan => 2}= row_spec['row']
  - columns.each_with_index do |column,case_index|
    - answers, answer_cases, answer_keys = adjudication_results_table_answers_for_column(column, row_spec, repeatable)
    - answer_specs = nil
    - if repeatable.nil?
      - answer_specs = answer_cases.each_with_index.map{|c, i| form_answer_field_maps[c.id].nil? ? nil : form_answer_field_maps[c.id][0][answer_keys[i]]}
    - else
      - answer_specs = answer_cases.each_with_index.map{|c, i| form_answer_field_maps[c.id].nil? ? nil : form_answer_field_maps[c.id][1][repeatable[:prefixes][c.case_type]][answer_keys[i]]}
    %td
      - answers.each_with_index do |answer, i|
        - answer_spec = answer_specs[i]
        %div
          %span.reader_header= "Reader #{i+1}:"
          - if answer.nil?
            %span.no_answer None
          - else
            = results_table_format_answer(answer, answer_spec)
            - if(answer_spec and answer_spec['type'] == 'roi' and roi_links and not (answer['location'].nil? or answer['location']['seriesUID'].nil? or answer['location']['imageIndex'].nil?))
              %a.roi_link{:href => '#', :onclick => "PharmTraceAPI.jumpToImage('#{answer['location']['seriesUID']}', #{answer['location']['imageIndex']}); return false;"} Jump to ROI

