image: registry.vela/velaluqa/gitlab-ci-build-images:ruby-2.3.4-docker-compose

variables:
  BUNDLE_GEMFILE: Gemfile-ci
  COMPOSE_FILE: docker-compose-ci.yml
  COMPOSE_PROJECT_NAME: $CI_PIPELINE_ID

stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-cache || true
    - docker-compose build test
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA} ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-cache
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-cache
test:
  stage: test
  script:
    - export DOCKER_PWD=$(echo /cache/$(hostname)/*/${CI_PROJECT_NAME}/ | awk '{sub(/^\/cache/,"/srv/build-cache")}1')
    - docker-compose run test bundle exec rake db:create db:migrate
    - docker-compose run test bundle exec rake ci
  after_script:
    - docker-compose down
  artifacts:
    paths:
      - reports
      - tmp/capybara

docs:publish:
  stage: deploy
  cache:
    key: 'ruby234'
    paths:
      - vendor/bundle
  before_script:
    - bundle install -j $(nproc) --deployment
  script:
    - export DOCKER_PWD=$(echo /cache/$(hostname)/*/${CI_PROJECT_NAME}/ | awk '{sub(/^\/cache/,"/srv/build-cache")}1')
    # - script/build_manual
    # - script/build_validation_report
    # - bundle exec gitdeploy

image:publish:
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA} ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
  after_script:
    - docker rmi ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
  dependencies: []
